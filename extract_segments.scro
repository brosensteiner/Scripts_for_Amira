# Amira-Script-Object V3.0

set moduleName [string map {"\.scro" ""} $this]

$this proc sayHello {} {
	global moduleName
   echo "\n************ module \"$moduleName\" loaded successfully :) ************\n"
}
$this proc say {something} {
	global moduleName
	echo "$moduleName: $something"
}

#function which connects moduleVar module with sourceVar module and checks if connection is valid
#if moduleVar module does not exist it also gets created in the pool
$this proc validSourceTestAndConnectIfOk {moduleVar sourceVar} {

	if {[lsearch -exact [all HxGMC] $moduleVar] == -1} {
	
		 	$this setVar moduleVarIntern [create HxGMC $moduleVar]
		 	$this setVarSerialize moduleVarIntern 0;#moduleVarIntern should not be saved with network scipt
		 	
		 	if {[[$this getVar moduleVarIntern] data validSource $sourceVar] == 1} {
		 		[$this getVar moduleVarIntern] data connect $sourceVar
		 	}
		 } else {
		 
		 	[$this getVar moduleVarIntern] data connect $sourceVar
		 	
	}
	
}

    
$this proc constructor {} {

	$this sayHello

	#creates the "None" and "All" buttons and formats them
	$this newPortButtonList "SelectMatVolSet1" 2
	$this SelectMatVolSet1 setLabel "Select Mat. Volume Set 1"
	$this SelectMatVolSet1 setLabel 0 "None"
	$this SelectMatVolSet1 setLabel 1 "All"

	$this newPortButtonList "SelectMatVolSet2" 2
	$this SelectMatVolSet2 setLabel "Select Mat. Volume Set 2"
	$this SelectMatVolSet2 setLabel 0 "None"
	$this SelectMatVolSet2 setLabel 1 "All"

	#creates new port connections that can connect to HxUniformLabelField3:
	$this newPortConnection "VolumeSet1PortCon" HxUniformLabelField3
	$this VolumeSet1PortCon setLabel "VolumeSet 1"
	$this newPortConnection "VolumeSet2PortCon" HxUniformLabelField3
	$this VolumeSet2PortCon setLabel "VolumeSet 2"

	#$this deletePort Data #shit, can not be deleted hmm...
	
	set hideNewModules 0 

}
  
  
$this proc destructor {} {

	set hideNewModules 0
	
}

$this proc savePreparation {datadir savingFlags} {


}
  
  
$this proc compute {} {

	set myVolumeSet1Source [$this VolumeSet1PortCon source]
	set myVolumeSet2Source [$this VolumeSet2PortCon source]
	
	set myButtonNone1WasHit [$this SelectMatVolSet1 wasHit 0]
	set myButtonAll1WasHit [$this SelectMatVolSet1 wasHit 1]
	set myButtonNone2WasHit [$this SelectMatVolSet2 wasHit 0]
	set myButtonAll2WasHit [$this SelectMatVolSet2 wasHit 1]

	if {[$this VolumeSet1PortCon isNew] == 0} {
		#nothing should happen for the moment here, but maybe in future ...
	} else {
	
		if {$myVolumeSet1Source == ""} {
			$this deletePort MatVolSet1
			$this say "no module connected to VolumeSet1PortCon connection port"
		} else {
		
			$this deletePort MatVolSet1
			
			set myMaterialsList1  [$myVolumeSet1Source parameters Materials list]
			set myMaterialCount1 [llength $myMaterialsList1]
			
			$this newPortToggleList "MatVolSet1" $myMaterialCount1
			$this MatVolSet1 setLabel "Mat. Volume Set 1"
			
			for {set i 0} {$i <= [$this MatVolSet1 getNum]} {incr i} {
				$this MatVolSet1 setLabel $i [lindex $myMaterialsList1 $i]
			}
			
			
			$this validSourceTestAndConnectIfOk "XXXSurfaceGenXXX" $myVolumeSet1Source
			
			$this say "Materials in volume set 1: $myMaterialCount1"
			
		}
			
	}

	if {[$this VolumeSet2PortCon isNew] == 0} {
			#nothing should happen here
	} else {
		
		if {$myVolumeSet2Source == ""} {
			$this deletePort MatVolSet2
			$this say "no module connected to VolumeSet1PortCon connection port"
		} else {
			
			$this deletePort MatVolSet2
				
			set myMaterialsList2  [$myVolumeSet2Source parameters Materials list]
			set myMaterialCount2 [llength $myMaterialsList2]
			
			$this newPortToggleList "MatVolSet2" $myMaterialCount2
			$this MatVolSet2 setLabel "Mat. Volume Set 2"
			
			for {set i 0} {$i <= [$this MatVolSet2 getNum]} {incr i} {
				$this MatVolSet2 setLabel $i [lindex $myMaterialsList2 $i]
			}
			
			$this say "Materials in volume set 2: $myMaterialCount2"
			
		}
			
	}
	
	if {$myButtonNone1WasHit == 1 && $myVolumeSet1Source != ""} {
	
		for {set i 0} {$i <= [$this MatVolSet1 getNum]} {incr i} {
			$this MatVolSet1 setValue $i 0
		}
		$this say "Button \"None\" pressed"
		
	}
	if {$myButtonAll1WasHit == 1 && $myVolumeSet1Source != ""} {
		for {set i 0} {$i <= [$this MatVolSet1 getNum]} {incr i} {
			$this MatVolSet1 setValue $i 1
		}
		$this say "Button \"All\" pressed"
	}
	
	if {$myButtonNone2WasHit == 1 && $myVolumeSet2Source != ""} {
	
		for {set i 0} {$i <= [$this MatVolSet2 getNum]} {incr i} {
			$this MatVolSet2 setValue $i 0
		}
		$this say "Button \"None\" pressed"
		
	}
	if {$myButtonAll2WasHit == 1 && $myVolumeSet2Source != ""} {
		for {set i 0} {$i <= [$this MatVolSet2 getNum]} {incr i} {
			$this MatVolSet2 setValue $i 1
		}
		$this say "Button \"All\" pressed"
	}
	
	
}
  
  